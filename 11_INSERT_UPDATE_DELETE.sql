
-- INSERT

-- 테이블 구조 확인
DESC departments;

-- INSERT의 첫 번째 방법 (모든 컬럼 데이터를 한 번에 지정해서 삽입)
INSERT INTO
    departments
VALUES
    (300, '개발부'); -- 에러
-- -> 컬럼을 지정하지 않고 값만 주는 경우에는 NULL 허용 상관 없이 모든 값을 다 줘야 한다

INSERT INTO
    departments
VALUES
    (300, '개발부', 100, 1500);

SELECT
    *
FROM
    departments;

-- 실행 시점을 다시 뒤로 되돌리는 키워드
ROLLBACK;

-- INSERT의 두 번째 방법 (직접 컬럼을 지정하고 저장, NOT NULL 컬럼을 꼭 확인할 것
INSERT INTO
    departments
    (department_id, department_name)
VALUES
    (300, '개발부');    -- 값을 주지 않은 것은 NULL로

INSERT INTO
        departments
        (department_id)
VALUES
    (300);    -- 에러 -> NOT NULL은 필수로 입력


-- 사본 테이블생성
-- 조회된 데이터까지 모두 복사
-- CTAS문은 컬럼의 구조와 데이터를 복사할 뿐, 제약조건(FK, PK..)은 복제되지 않는다
CREATE TABLE
    emps
AS
    (
        SELECT
            employee_id, first_name, job_id, hire_date
        FROM
            employees
    );

-- WHERE절에 false값을 지정하면 테이블의 구조만 복사되고 데이터는 복사되지 않는다 
CREATE TABLE
    emps
AS
    (
        SELECT
            employee_id, first_name, job_id, hire_date
        FROM
            employees WHERE 1 = 2
    );

SELECT
    *
FROM
    emps;

DROP TABLE
    emps;


-- INSERT (서브쿼리)
INSERT INTO
    emps
    (
        SELECT
            employee_id, first_name, job_id, hire_date
        FROM
            employees
        WHERE
            department_id = 50
    );


-- PK가 복제되지 않아서 같은 employee_id를 갖는 값이 여러 개 존재
SELECT
    *
FROM
    emps
WHERE
    employee_id = 120;


--------------------------------------------------------------------------------

-- UPDATE

CREATE TABLE
    emps
AS
    (
        SELECT
            *
        FROM
            employees
    );

SELECT
    *
FROM 
    emps;


-- UPDATE 테이블 이름 SET 컬럼=값, 컬럼=값 ... WHERE 누구를 수정할지 (조건)
-- 조건을 지정하지 않으면 전체 테이블이 수정됨
UPDATE
    emps
SET
    salary = 30000;


SELECT
    *
FROM
    emps;

ROLLBACK;


UPDATE
    emps
SET
    salary = salary + salary * 0.1
WHERE
    employee_id = 100;


UPDATE
    emps
SET
    phone_number = '010.1234.5678',
    manager_id = '102'
WHERE
    employee_id = 100;


-- UPDATE (서브쿼리)
UPDATE
    emps
SET
    (job_id, salary, manager_id) = (
        SELECT
            job_id, salary, manager_id
        FROM
            emps
        WHERE
            employee_id = 100
    )
WHERE employee_id = 101;


--------------------------------------------------------------------------------

-- DELETE
-- DELETE도 WHERE을 지정하지 않으면 테이블 전체 행이 대상이 됨
DELETE
FROM
    emps
WHERE
    employee_id = 103;


-- DELETE (서브쿼리)
DELETE
FROM
    emps
WHERE
    department_id = (
        SELECT
            department_id
        FROM
            departments
        WHERE
            department_name = 'IT'
    );




SELECT
    *
FROM
    emps;
